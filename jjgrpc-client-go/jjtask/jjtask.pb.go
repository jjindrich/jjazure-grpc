// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jjtask.proto

package JJTaskGrpcDemo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JJTask struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JJTask) Reset()         { *m = JJTask{} }
func (m *JJTask) String() string { return proto.CompactTextString(m) }
func (*JJTask) ProtoMessage()    {}
func (*JJTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd255cf67ff6be0, []int{0}
}

func (m *JJTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JJTask.Unmarshal(m, b)
}
func (m *JJTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JJTask.Marshal(b, m, deterministic)
}
func (m *JJTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JJTask.Merge(m, src)
}
func (m *JJTask) XXX_Size() int {
	return xxx_messageInfo_JJTask.Size(m)
}
func (m *JJTask) XXX_DiscardUnknown() {
	xxx_messageInfo_JJTask.DiscardUnknown(m)
}

var xxx_messageInfo_JJTask proto.InternalMessageInfo

func (m *JJTask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type JJTaskDetail struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JJTaskDetail) Reset()         { *m = JJTaskDetail{} }
func (m *JJTaskDetail) String() string { return proto.CompactTextString(m) }
func (*JJTaskDetail) ProtoMessage()    {}
func (*JJTaskDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd255cf67ff6be0, []int{1}
}

func (m *JJTaskDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JJTaskDetail.Unmarshal(m, b)
}
func (m *JJTaskDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JJTaskDetail.Marshal(b, m, deterministic)
}
func (m *JJTaskDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JJTaskDetail.Merge(m, src)
}
func (m *JJTaskDetail) XXX_Size() int {
	return xxx_messageInfo_JJTaskDetail.Size(m)
}
func (m *JJTaskDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_JJTaskDetail.DiscardUnknown(m)
}

var xxx_messageInfo_JJTaskDetail proto.InternalMessageInfo

func (m *JJTaskDetail) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JJTaskDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*JJTask)(nil), "JJTaskGrpcDemo.JJTask")
	proto.RegisterType((*JJTaskDetail)(nil), "JJTaskGrpcDemo.JJTaskDetail")
}

func init() { proto.RegisterFile("jjtask.proto", fileDescriptor_1cd255cf67ff6be0) }

var fileDescriptor_1cd255cf67ff6be0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0xca, 0x2a, 0x49,
	0x2c, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xf3, 0xf2, 0x0a, 0x49, 0x2c, 0xce,
	0x76, 0x2f, 0x2a, 0x48, 0x76, 0x49, 0xcd, 0xcd, 0x57, 0x92, 0xe1, 0x62, 0x83, 0x88, 0x08, 0x09,
	0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a,
	0x46, 0x5c, 0x3c, 0x10, 0x59, 0x97, 0xd4, 0x92, 0xc4, 0xcc, 0x1c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc,
	0x14, 0xb0, 0x0a, 0xd6, 0x20, 0xa6, 0xcc, 0x14, 0xb8, 0x1e, 0x26, 0x84, 0x1e, 0xa3, 0x20, 0x2e,
	0x5e, 0x88, 0x1e, 0xdf, 0xc4, 0xbc, 0xc4, 0xf4, 0xd4, 0x22, 0x21, 0x47, 0x2e, 0x76, 0xc7, 0x94,
	0x14, 0xb0, 0x1d, 0x62, 0x7a, 0xa8, 0xd6, 0x43, 0xb9, 0x52, 0x32, 0xd8, 0xc5, 0x21, 0xb6, 0x2a,
	0x31, 0x38, 0x19, 0x71, 0x49, 0x67, 0xe6, 0xeb, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0xa5, 0x56, 0x24,
	0xe6, 0x16, 0xe4, 0xa4, 0x16, 0xeb, 0x65, 0xa4, 0xe6, 0xe4, 0xe4, 0x97, 0xe7, 0x17, 0xe5, 0xa4,
	0x38, 0x71, 0x43, 0xbc, 0x08, 0xf6, 0x61, 0x00, 0xe3, 0x22, 0x26, 0x66, 0x0f, 0x9f, 0xf0, 0x24,
	0x36, 0x30, 0xd7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x08, 0xfc, 0xf3, 0xcc, 0x00, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JJTaskManagerClient is the client API for JJTaskManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JJTaskManagerClient interface {
	AddTask(ctx context.Context, in *JJTask, opts ...grpc.CallOption) (*JJTaskDetail, error)
}

type jJTaskManagerClient struct {
	cc *grpc.ClientConn
}

func NewJJTaskManagerClient(cc *grpc.ClientConn) JJTaskManagerClient {
	return &jJTaskManagerClient{cc}
}

func (c *jJTaskManagerClient) AddTask(ctx context.Context, in *JJTask, opts ...grpc.CallOption) (*JJTaskDetail, error) {
	out := new(JJTaskDetail)
	err := c.cc.Invoke(ctx, "/JJTaskGrpcDemo.JJTaskManager/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JJTaskManagerServer is the server API for JJTaskManager service.
type JJTaskManagerServer interface {
	AddTask(context.Context, *JJTask) (*JJTaskDetail, error)
}

func RegisterJJTaskManagerServer(s *grpc.Server, srv JJTaskManagerServer) {
	s.RegisterService(&_JJTaskManager_serviceDesc, srv)
}

func _JJTaskManager_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JJTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JJTaskManagerServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JJTaskGrpcDemo.JJTaskManager/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JJTaskManagerServer).AddTask(ctx, req.(*JJTask))
	}
	return interceptor(ctx, in, info, handler)
}

var _JJTaskManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "JJTaskGrpcDemo.JJTaskManager",
	HandlerType: (*JJTaskManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _JJTaskManager_AddTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jjtask.proto",
}
